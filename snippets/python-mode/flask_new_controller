 -*- mode: snippet -*-
# name: flask_new_controller
# key: flask_new_con
# group: flask
# --
from werkzeug.exceptions import HTTPException
from flask.blueprints import Blueprint
from flask_restful import Api
from flask import jsonify
from ..models import docs
from .service import ${3:XXXService}

logger = logging.getLogger(__name__)

bp_${1:auth} = Blueprint("$1", __name__, url_prefix="/$1")

api = Api(bp_$1)
api.add_resource($3, "/${2:login}", endpoint="$2")

def register_docs():
    docs.register($3, endpoint="$1.$2")

register_docs()

@bp_$1.errorhandler(Exception)
def handle_exception(e):
    """
    always return json as response. 
    """
    if isinstance(e, HTTPException):
        response = e.get_response()
        # replace the body with JSON
        response.data = json.dumps({
            "code": e.code,
            "name": e.name,
            "description": e.description,
        })
        response.content_type = "application/json"
        return response
    else:
        exc_info = sys.exc_info()
        logger.exception(exc_info)
        # description becomes 'message' field in the json 
        return abort(500, description="")